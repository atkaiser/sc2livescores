# Setting up a new server:

# Set up swap stuff
# https://www.digitalocean.com/community/tutorials/how-to-add-swap-on-ubuntu-14-04
# Run:
sudo fallocate -l 2G /swapfile
sudo chmod 600 /swapfile
sudo mkswap /swapfile
sudo swapon /swapfile
# Then have to edit two files to make permenant

# First create a new user:
useradd <user>
passwd <user>
# Create folder for user and chown it
chown <user>:<user> /home/<user>
chmod 0700 /home/<user>

# Make sure the user is using bash shell
sudo chsh -s /bin/bash <username>

# add them to the sudoers file
sudo adduser <username> sudo

# add ssh keys
Add to .ssh/authorized_keys

# create ssh key
# https://help.github.com/articles/generating-ssh-keys#platform-linux
ssh-keygen -t rsa -C "your_email@example.com"

#update apt-get
sudo apt-get update

# Set up github
sudo apt-get install git
# Upload ssh key to github
git config --global user.email "atkaiser@berkeley.edu"
git config --global user.name "Alex Kaiser"
# get project from git

# copy over .vimrc file to home
# copy over .bash_profile file to home

# install pip
sudo apt-get install python-pip
sudo apt-get install -y python-dev
sudo apt-get upgrade gcc
sudo apt-get install -y nodejs npm libav-tools libjpeg-dev yasm tesseract-ocr

# Fix nodejs bug
sudo ln -s /usr/bin/nodejs /usr/bin/node

# Install bower
sudo npm install -g bower

# Virtual env stuff
#http://www.jeffknupp.com/blog/2013/12/18/starting-a-django-16-project-the-right-way/

#install virtualenv
sudo pip install virtualenvwrapper
# set up .profile
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/directory-you-do-development-in
source /usr/local/bin/virtualenvwrapper.sh
cd <path to proj>/utils
source setup_proj.sh

mkvirtualenv <django_project>

# Setup tesseract configs
copy from sc2livescores/sc2game/utils/tess_configs to /usr/share/tesseract-ocr/tessdata/configs

pip install -r utils/requirements.txt

# Set up settings:
cp sc2livescores/sets.py.tmp sc2livescores/sets.py

# Setup bower
mpy bower install
# Setup db
mpy syncdb
# colllect static files
mpy collectstatic

